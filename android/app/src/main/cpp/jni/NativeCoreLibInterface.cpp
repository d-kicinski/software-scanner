// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from handy.djinni

#include "NativeCoreLibInterface.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeCoreLibInterface::NativeCoreLibInterface() : ::djinni::JniInterface<::generated::CoreLibInterface, NativeCoreLibInterface>("dying/slowly/generated/CoreLibInterface$CppProxy") {}

NativeCoreLibInterface::~NativeCoreLibInterface() = default;


CJNIEXPORT void JNICALL Java_dying_slowly_generated_CoreLibInterface_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::generated::CoreLibInterface>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_dying_slowly_generated_CoreLibInterface_cvtGray(JNIEnv* jniEnv, jobject /*this*/, jlong j_imagePtr)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        ::generated::CoreLibInterface::cvtGray(::djinni::I64::toCpp(jniEnv, j_imagePtr));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_dying_slowly_generated_CoreLibInterface_drawContour(JNIEnv* jniEnv, jobject /*this*/, jlong j_inputPtr)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        ::generated::CoreLibInterface::draw_contour(::djinni::I64::toCpp(jniEnv, j_inputPtr));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT void JNICALL Java_dying_slowly_generated_CoreLibInterface_softwareScanner(JNIEnv* jniEnv, jobject /*this*/, jlong j_inputPtr, jlong j_outputPtr)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        ::generated::CoreLibInterface::software_scanner(::djinni::I64::toCpp(jniEnv, j_inputPtr),
                                                        ::djinni::I64::toCpp(jniEnv, j_outputPtr));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jstring JNICALL Java_dying_slowly_generated_CoreLibInterface_hello(JNIEnv* jniEnv, jobject /*this*/, jstring j_name)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::generated::CoreLibInterface::hello(::djinni::String::toCpp(jniEnv, j_name));
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jobject JNICALL Java_dying_slowly_generated_CoreLibInterface_findDocument(JNIEnv* jniEnv, jobject /*this*/, jlong j_inputPtr)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::generated::CoreLibInterface::find_document(::djinni::I64::toCpp(jniEnv, j_inputPtr));
        return ::djinni::release(::djinni::Optional<std::optional, ::djinni::List<::djinni::List<::djinni::I64>>>::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
